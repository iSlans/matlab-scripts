% max 3000x + 1000y
% x     <= 3
%    y  <= 2
% 2x+2y <= 7
% x     >= 0
%    y  >= 0

c = [3 1];
A = [
    1 0
    0 1
    2 2
    -1 0
    0 -1
    ];
b = [3 2 7 0 0];

% primalSimplex(c, A, b, [2 3])
% Primal Simplex step 1

%              key                value
%     ___________________    ______________
%      base                   2 3
%      x                      3/2 2
%      y                      0 -2 3/2 0 0
%      f function value       6.5
%      h exiting index        2
%      k entering index       1
%      r ratios               3/2 2
%      new base               1 3

% Primal Simplex step 2
% optimum found
% ans =
%        3
%        1/2
c = [-3 -1 0 0 0];
A = [
    1 0 1 0 0
    0 1 0 1 0
    2 2 0 0 1
    ];
b = [3 2 7];

% gomory(c, A, b)

% ---------------------------------------------------------------------------- %
%                                      es2                                     %
% ---------------------------------------------------------------------------- %

c =- [52 27 50 60 31 11];
A = [10 6 15 22 17 14];
b = 39;

% x = linprog(c, A, b, [], [], c * 0, c * 0 +1);
% x =
%        1
%        1
%        1
%        4/11
%        0
%        0

% x = linprog(c, A, b, [], [], c * 0, []);
% x =
%     3.9000
%          0
%          0
%          0
%          0
%          0

c =- [52 27 50 60 31 11 0];
A = [10 6 15 22 17 14 1];
b = 39;

% gomory(c, A, b)
% x1 + x3 + 2*x4 + x5 + x6 <= 3

% return

c =- [52 27 50 60 31 11];
A = [
    10 6 15 22 17 14
    1 0 1 2 1 1
    ];
b = [39 3];
% x = linprog(c, A, b, [], [], c * 0, c * 0 +1);
% x =
%        1
%        1
%        1
%        4/11
%        0
%        0

% ---------------------------------------------------------------------------- %
%                                      es3                                     %
% ---------------------------------------------------------------------------- %

b = [-5 -3 -6 2 4 8];
edges = [
    1 2 4 8
    1 3 3 10
    2 3 10 4
    2 4 9 6
    2 6 3 5
    3 4 9 8
    3 5 6 4
    3 6 9 7
    4 6 5 4
    5 6 3 8
    ];

T = [
    1 2
    1 3
    2 6
    3 4
    3 5
    ];

U = [
    2 3
    3 6
    ];

% [flow, pot] = flowSimplex(b, edges, T, U)

% b = [-5 1 1 1 1 1];
% [flow, pot] = flowSimplex(b, edges, T, U)

% g = digraph(edges(:, 1), edges(:, 2), edges(:, 3))
% plot(g.shortestpathtree(1))

% g = digraph(edges(:, 1), edges(:, 2), edges(:, 4))
% [maxflowvalue, ~, ns, nd] = g.maxflow(1, 6)

% ---------------------------------------------------------------------------- %
%                                      es4                                     %
% ---------------------------------------------------------------------------- %

syms x [2 1]

f = x1 ^ 2 + x2 ^ 2 -16 * x1 -12 * x2;
A = [
    -2 3
    2 3
    1 0
    -1 0
    0 -1
    ];
b = [12 24 6 0 0]';
g = A * x -b;
% s = LKKTsystem(x, f, g);

% RicOp.LKKT(f, g)
% RicOp.FrankWolfe(f, A, b, [6 1], 2)

% minFrankWolfe(x, f, A, b, xk)
