% ---------------------------------------------------------------------------- %
%                                      es1                                     %
% ---------------------------------------------------------------------------- %

% max 2x + 1y
% 2x + 5y <= 17
% 3x + 2y <= 10
% x,y >= 0

c = [2 1];
A = [
    2 5
    3 2
    -1 0
    0 -1
    ];
b = [17 10 0 0];

% primalSimplex(c, A, b, [3 4])
% Primal Simplex step 1
%              key               value
%     ___________________    ___________
%      base                   3 4
%      x                      0 0
%      y                      0 0 -2 -1
%      f function value       0
%      h exiting index        3
%      k entering index       2
%      r ratios               17/2 10/3
%      new base               2 4

% Primal Simplex step 2
% optimum found
% ans =
%       10/3
%        0

% Lower evaluation = (3,0) , 6000
% Upper evaluation = (10/3,0) 6666

c =- [2 1 0 0];
A = [
    2 5 1 0
    3 2 0 1
    ];
b = [17 10];

% gomory(c, A, b)

% ---------------------------------------------------------------------------- %
%                                      es2                                     %
% ---------------------------------------------------------------------------- %

c = [36 38 40 42 44];
A = [7 9 11 13 15];
b = 31;

% linprog(-c, A, b, [], [], c * 0, c * 0 +1)
% ans =
%        1
%        1
%        1
%        4/13
%        0

% linprog(-c, A, b, [], [], c * 0, [])
% ans =
%       31/7
%        0
%        0
%        0
%        0

c = [36 38 40 42 44 0];
A = [7 9 11 13 15 1];
b = 31;

% gomory(-c, A, b)
% x1 + x2 + x3 + x4 + 2*x5 <= 4

c = [36 38 40 42 44];
A = [
    7 9 11 13 15
    1 1 1 1 2
    ];
b = [31 4];
% linprog(-c, A, b, [], [], c*0, [])
% ans =
%        7/2
%        0
%        0
%        1/2
%        0

% B&B
% lower eval => by efficiency ratio, knapsackGreedy
% upper     => by 0<=x<=1

c = [36 38 40 42 44];
A = [7 9 11 13 15];
b = 31;

% [x, val] = knapsackGreedy(c, A, b)
% [xu, valu] = linprog(-c, A, b, [], [], c * 0, c * 0 +1)

% ...

% ---------------------------------------------------------------------------- %
%                                      es3                                     %
% ---------------------------------------------------------------------------- %

b = [-5 -3 -2 4 3 3];
ed = [
    1 2 7 5
    1 3 9 12
    1 4 9 12
    2 4 8 8
    2 5 10 4
    3 6 6 10
    4 3 5 8
    4 5 4 4
    4 6 10 7
    5 6 5 10
    ]
t = [
    1 2
    1 3
    2 4
    3 6
    5 6
    ]
u = [
    2 5
    ]

% flowSimplex(b, ed, t, u)
% flow = [5 0 0 4 4 2 0 0 0 1]
% potential = [0 7 9 15 10 15]

% g = digraph(ed(:, 1), ed(:, 2), ed(:, 3));
% plot(g.shortestpathtree(1))
% g.shortestpathtree(1).Edges
%     EndNodes    Weight
%     ________    ______
%      1    2       7
%      1    3       9
%      1    4       9
%      3    6       6
%      4    5       4

% g = digraph(ed(:, 1), ed(:, 2), ed(:, 4));

% [maxf, gg, ns, nd] = g.maxflow(1, 6)
% gg.Edges
% EndNodes    Weight
% ________    ______
%  1    2        4
%  1    3       10
%  1    4       11
%  2    5        4
%  3    6       10
%  4    5        4
%  4    6        7
%  5    6        8
% plot(gg, EdgeLabel = gg.Edges.Weight)

% ---------------------------------------------------------------------------- %
%                                      es4                                     %
% ---------------------------------------------------------------------------- %

syms x [2 1]

maxf = x1 ^ 2 + x2 ^ 2 -8 * x1 - 6 * x2;
A = [
    -1 -1
    0 -1
    1 -1
    1 1
    0 1
    -1 1
    ];
b = [1 0 2 4 2 1]';

g = A * x -b;

LKKTsystem(x, maxf, g)
LKKTsystem(x, -maxf, g)

% RicOp.LKKT(f, g)
